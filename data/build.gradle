plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

android {
    namespace 'com.ljb.data'
    compileSdk 33

    defaultConfig {
        minSdk 24
        targetSdk 33

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        buildConfigField "String", "GOODBYE_CORONA_API_KEY", properties['goodbye.corona.api.key']
        buildConfigField "String", "DATA_GO_KR_API_KEY_ENCODE", properties['data.go.kr.api.key.encode']
        buildConfigField "String", "DATA_GO_KR_API_KEY_DECODE", properties['data.go.kr.api.key.decode']

        buildConfigField "String", "NEWS_API_KEY", properties['NEWS_API_KEY']
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation project(path: ':domain')

    //Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.8.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    //Coroutine
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"

    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-jaxb:$retrofit_version"

    //Gson
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    //TikXml - SDK32 사용으로 인한 0.8.13 사용
    implementation "com.tickaroo.tikxml:annotation:$tikxml_version"
    implementation "com.tickaroo.tikxml:core:$tikxml_version"
    implementation "com.tickaroo.tikxml:retrofit-converter:$tikxml_version"
    kapt "com.tickaroo.tikxml:processor:$tikxml_version"

    //OkHttp: 통신 로그 확인하기 위함
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    implementation "com.squareup.okhttp3:okhttp-urlconnection:$okhttp_version"

    //구글Maps KTX - Clustering 사용
    implementation "com.google.maps.android:maps-ktx:$googlemaps_ktx"
    implementation "com.google.maps.android:maps-utils-ktx:$googlemaps_ktx"

    //Room
    implementation "androidx.room:room-runtime:$room_version"
    kapt"androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
}